/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require clrs
 *= require skeleton
 *= require_tree .
 *= require_self
 */

@import 'glyphicons';
@import 'clrs';

$black: #333;

@import url('https://fonts.googleapis.com/css?family=Crimson+Text');

@font-face {
  font-family: 'Kirsty';
  src: font-url('Kirsty.ttf') format('truetype');
}

html, body {
  height: 100%;
}

html, body, p, div, a {
  font-family: 'Crimson Text', serif;
  margin: 0;
  padding: 0;
}

body {
  padding: 1em 0 2em 0;
}

h1, h2, h3, h4, h5 {
  font-family: Kirsty, Helvetica, Arial;
}

nav {
  clear: both;
}

nav ul {
   list-style: none;
   margin: 0.8em;
}

nav ul li {
  display:inline-block;
  padding: 1em;
  font-size: 1.4em;
}

.editing .faction .information .name {
  margin-top: 10px;
}

.faction {
  background: white;
  border: 3px solid $black;
  margin: 1em 0em;

  .name {
    display: inline-block;
    width: 70%;
    font-family: Kirsty, Helvetica, Arial;
    font-size: 1.7em;
  }

  .icon {
    @extend %glyphicon-log-out;
    text-decoration: none;
    margin: 0 0.5em;
    position: relative;
    top: 2px;
    font-size: 0.8em;
    &:hover {
      background: transparent;
    }
  }

  .rep, .hold, .status {
    display: inline-block;
    text-align: center;
    width: 10%;
    vertical-align: top;
  }
  .category {
    background: $black;
    color: $white;
    padding: 1em;
    font-size: 1.3em;
  }
  .information {
    padding: 1em;

    .rep, .hold, .status {
      font-size: 1.4em;
      input {
        width: 60px;
        font-weight: bold;
        transform: skew(-10deg);
        margin: 0;

        &[type="checkbox"] {
          display: none;
        }
      }
    }
  }
  &.description {
    padding: 1em;
    font-family: 'Crimson Text', serif;
    font-size: 1.2em;
  }
}

div.actions {
  margin: 0;

  button {
    margin: 0;
    border-radius: 0;
  }
}

.btn-primary, a.btn-primary, input.btn-primary {
  cursor: pointer;
  display: inline-block;
  color: $white;
  background: $black;
  border: 3px solid $black;
  padding: 0.5em;
  font-size: 1.75em;
  font-family: Kirsty, Helvetica, Arial;
  text-decoration: none;
  transition: all 1s ease;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-size: 100% 200%;
  background-image: linear-gradient(to bottom, $black 50%, $red 50%);
  transition: background-position 1s;

  border-radius: 0;

  &:visited { color: $white; }
  &:hover {
    transition: background-position 0.4s cubic-bezier(0.000, 0.000, 0.230, 1);
    background-position: 0% 75%;
  }
}
.war {
  color: $red;
  text-transform: uppercase;
}

.editing {
  border: 4px solid $black;
  margin: 1em 0;
  padding: 0 1em 1em 1em;
  transition: all 0.2s ease-out;
}

textarea,
textarea:focus,
select,
select:focus,
input[type="number"],
input[type="number"]:focus,
input[type="text"],
input[type="text"]:focus {
  border: 3px solid $black;
  border-radius: 0px;
}

textarea {
  width: 100%;
  min-height: 125px;
  margin: 0.1em 0 0 0;
  resize: none;
}

.tgl {
	display: none;

	// add default box-sizing for this scope
	&,
  &:after,
  &:before,
	& *,
  & *:after,
  & *:before,
	& + .tgl-btn {
		box-sizing: border-box;
		&::selection {
			background: none;
		}
	}

	+ .tgl-btn {
		outline: 0;
		display: inline-block;
		width: 3em;
		height: 2.04em;
		position: relative;
		cursor: pointer;
    user-select: none;
		&:after,
    &:before {
			position: relative;
			display: block;
			content: "";
			width: 50%;
			height: 100%;
		}

		&:after {
			left: 0;
		}

		&:before {
			display: none;
		}
	}

	&:checked + .tgl-btn:after {
		left: 50%;
	}
}

.tgl-skewed {
	+ .tgl-btn {
		overflow: hidden;
		transform: skew(-10deg);
		backface-visibility: hidden;
		transition: all .2s ease;
		background: #888;
		&:after,
    &:before {
			transform: skew(10deg);
			display: inline-block;
			transition: all .2s ease;
			width: 100%;
			text-align: center;
			position: absolute;
			line-height: 2em;
			font-weight: bold;
			color: #fff;
			text-shadow: 0 1px 0 rgba(0,0,0,.4);
		}

		&:after {
			left: 100%;
			content: attr(data-tg-on);
		}

		&:before {
			left: 0;
			content: attr(data-tg-off);
		}

		&:active {
			background: #888;
			&:before {
				left: -10%;
			}
		}
	}

	&:checked + .tgl-btn {
    background: $black;
    &:before {
      left: -100%;
    }

    &:after {
      left: 0;
    }

    &:active:after {
      left: 10%;
    }
	}
}

body:before, body:after {
    content: "";
    position: fixed;
    background: $black;
    left: 0;
    right: 0;
    height: 10px;
    z-index: 1000000;
}
body:before {
    top: 0;
}
body:after {
    bottom: 0;
}
body {
    border-left: 10px solid $black;
    border-right: 10px solid $black;
}

@media (max-width: 600px){
  html, body {
    margin: 0;
    height: 100%;
  }

  body:before, body:after {
      content: "";
      position: fixed;
      background: $black;
      left: 0;
      right: 0;
      height: 5px;
      z-index: 1000000;
  }
  body:before {
      top: 0;
  }
  body:after {
      bottom: 0;
  }
  body {
      border-left: 5px solid $black;
      border-right: 5px solid $black;
  }



  .container {
    width: 90%;
  }

  .category, .information {
    .name {
      width: 63%;
      font-size: 1.5em;
    }
    .rep, .hold, .status {
      width: 12%;
    }
  }
}
